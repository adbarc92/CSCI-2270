Heaps

// Parent < Children in MinHeap
// Insert at next available spot
// Heaps do not have properties like BSTs
// Resolve violations upward
// For replacing, choose smallest child
	// Beginning with Index 1, array implementation
	// LC = 2i
	// RC = 2i + 1
	// Parent = i/2
	// Check parent versus children values for rebalancing
	// Check when pop/insert
// For Final Assignment:
	// Only pop from first position
	// Constantly heapify

04.20.2018

- Binary heap - any parent nodes has higher priority than its children
	- Linked List
	- Array
		- Root = 1
		- RootLC = 2
		- RootRC = 3
		- LCLC = 4
		- LCRC = 5
		- RCLC = 6
		- RCRC = 7
		- Parent of a given K is K/2, so long as zero is left unoccupied ( int automatically rounds down )
		- Left child is 2K
		- Right child is 2K + 1
		- Sort by max = max heap; min = min heap
			- Project is min heap
	- Heap
		- If child has greater priority than parent, then the child/parent swap
		